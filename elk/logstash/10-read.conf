input {
    file {
        path => "/vagrant/logs/bro/*/*.log"
        start_position => "beginning"
        type => "bro"
        sincedb_path => "/dev/null"
    }
    file {
        path => "/vagrant/logs/suricata/*/eve.json"
        start_position => "beginning"
        type => "suricata"
        sincedb_path => "/dev/null"
    }
    file {
        path => "/vagrant/logs/snort_et/*/alert.fast"
        start_position => "beginning"
        type => "snort_et"
        sincedb_path => "/dev/null"
    }
    file {
        path => "/vagrant/logs/snort_sf/*/eve.json"
        start_position => "beginning"
        type => "snort_sf"
        sincedb_path => "/dev/null"
    }
}
filter {
    if [type] == "bro" {
        grok {
            match => ["path", "/vagrant/logs/bro/(?<iteration_name>\S+?)/(?<bro_logtype>\S+?).log" ]   
        }   
        json {  
            source => "message"
        }
        date {
            match => [ "ts", "MMM  d HH:mm:ss", "UNIX" ]
        }
    } 
    else if [type] == "suricata" {
        grok {
            match => ["path", "/vagrant/logs/suricata/(?<iteration_name>\S+?)/eve\.json" ]   
        }
        json {  
            source => "message"
        }
        if [event_type] == "netflow" {
            drop { }
        } else {
            date {
                match => [ "timestamp", "ISO8601" ]
            }
        }
    }
    else if [type] == "snort_et" {
        grok {
            match => ["message", "(?<timestamp>^\S+)\.\d+\s+\[\S+\] \[(?<gen_id>\d+):(?<sig_id>\d+):(?<sig_rev>\d+)\] (?<alert_message>.+) \[Classification: (?<alert_classification>.+)\] \[Priority: (?<priority>\d+)\] \{(?<proto>\S+)\} (?<src>\S+) -> (?<dst>\S+)"]
        }
        date {
            match => ["timestamp", "MM/dd-HH:mm:ss"]
        }
        grok {
            match => ["path", "/vagrant/logs/snort_et/(?<iteration_name>\S+?)/alert.fast" ]   
        }
    }
    else if [type] == "snort_sf" {
        grok {
            match => ["message", "(?<timestamp>^\S+)\.\d+\s+\[\S+\] \[(?<gen_id>\d+):(?<sig_id>\d+):(?<sig_rev>\d+)\] (?<alert_message>.+) \[Classification: (?<alert_classification>.+)\] \[Priority: (?<priority>\d+)\] \{(?<proto>\S+)\} (?<src>\S+) -> (?<dst>\S+)"]
        }
        date {
            match => ["timestamp", "MM/dd-HH:mm:ss"]
        }
        grok {
            match => ["path", "/vagrant/logs/snort_sf/(?<iteration_name>\S+?)/alert.fast" ]
        }
    }
}
output {
    elasticsearch { 
        host => localhost 
        protocol => "http" 
        port => "9200" 
    }
}